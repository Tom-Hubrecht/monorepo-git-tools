# variables related to documentation
# used in the print_usage function
doc_program_name="git topbase"
doc_author="Nikita Skobov"
doc_author_email="skobo002@umn.edu"
doc_version="1.2.1"
doc_last_updated="2020-05-30"
doc_copyright="Copyright (C) 2020 $doc_author

$doc_program_name is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under the terms of the
GNU Affero General Public License as published by
the Free Software Foundation, version 3, and no later.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>."
doc_synopsis=(
    "<top_branch> <bottom_branch>    [OPTIONS]"
)
doc_description='git topbase '\
'is a git command that takes two branch names (top, and bottom), and '\
'finds a branching point based on '\
'commit message, and author date, and rebases everything from that '\
'branching point onto the bottom branch. '\
'This is useful when you try to bring in recent remote changes into '\
'your local repository, and you only want the changes that have occurred '\
'since the latest shared commit.

For example, consider a local repository that has history:'\
'

A---B---C'\
'

and a remote repository that has history:'\
'

H---I---J---K---L'\
'

You want to bring in the remote repository into your local repository '\
'so you use git split on that repository, and lets say you do not want '\
'the full history, so you squash commits H,I,J,K,L into one, called X. '\
'Then you make changes to their code, and you make two commits, and then '\
'you split out their repository again, and submit your changes to them.'\
'

Your local repository now has history:'\
'

A---B---C---X---E---F
'\
'
and if you split out the changes youve made on their code, you will have '\
'

X---E*---F*'\
'

which you rebase onto their current master, and you will be essentially '\
'submitting a branch that looks like: '\
'

H---I---J---K---L---E*---F*'\
'

Now, suppose they accept your changes, and on top of your changes, they make 3'\
'new commits, so now their master looks like:'\
'

H---I---J---K---L---E*---F*---M---N---O'\
'

Meanwhile, you have also made 1 commit on top of your local branch, which '\
'now looks like this: '\
'

A---B---C---X---E---F---G'\
'

Now, consider you split in their current master into a branch of your '\
'local repository. This split in branch would look like: '\
'

H*---I*---J*---K*---L*---E**---F**---M*---N*---O*'\
'

Where each commit is marked with an extra asterisk because if you split in their '\
'repository into a subfolder, then the commit hashes will change. Now, topbase '\
'was created to be able to take the latest commits M,N,O, and apply them on '\
'top of your latest local commit: H. If the split in branch was named remote, and '\
'your local master was named local, then the command you would run would be: '\
'

git topbase remote local'\
'

which would find the closest branching point between remote and local. '\
'In this case, the branching point would be F, and F**. This is why topbase '\
'is useful: because a simple git rebase would fail to recognize that F, and F** '\
'are the same commits. git topbase can detect they are the same commits because '\
'they contain the same commit message, and the same author time.'\
'

The topbase command will rebase the top portion of the remote branch '\
'and apply it on the top of the local branch, and put the resulting changes '\
'into the remote branch. So the local branch is unchanged, but the remote '\
'branch will become: '\
'

A---B---C---X---E---F---G---M**---N**---O**'\
'

Which, since your local branch was unchanged, you can then simply '\
'fast forward merge the newly rebased remote branch back into local.'
doc_commands=(
    "None"
)
doc_global_options=(
    "-h, --help"
    "print help and exit"
    "--version"
    "print the version and exit"
    "--dry-run"
    "does not actually modify/do anything. Just outputs the commands that it would do without the --dry-run option present."
)
doc_options_1=(
    "Options:"
    ""
    "None"
)
doc_custom_sections=(
    "doc_options_1"
)
